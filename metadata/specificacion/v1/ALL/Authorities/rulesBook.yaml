openapi: "3.0.0"
info:
  version: 1.0.0
  title: Rule book for multilateral financial Instruments
  description: >-
    Rule Book CRUD for ALL financial competent authorities and operations
    allowed between users of different financial systems. OpenAPI 3.0
    specification
  termsOfService: http://rulebook.com/terms/
  contact:
    name: Team
    email: team@rulebook.com
    url: http://rulebook.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers: 
  - url: "https://{username}.cobbhub.com:{port}/{basePath}"
    description: "The concept environment API server"
    variables:
      username:
        # note! no enum here means it is an open value
        default: "open"
        description: "this value is assigned."
      port:
        enum:
          - '8443'
          - '443'
        default: '8443'
      basePath:
        # open meaning there is the opportunity to use special base paths as assigned by the provider, default is `v1`
        default: 'api/v1'
paths:
  /rules:
    get:
      tags:
        - RuleBook
      summary: Returns all financial Rules from the system that the user has access to
      description: Returns all financial rules from the system that the user has access to
      operationId: findRules
      responses:
        '200':
          description: rule response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rule'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - RULE
      summary: Creates a new rule in the rule book.  Duplicates are not allowed
      description: Creates a new rule in the rule book.  Duplicates are not allowed
      operationId: addRule
      requestBody:
        description: Rule to add to the rule book
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRule'
      responses:
        '200':
          description: rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /rules/{id}:
    get:
      tags:
        - RULE
      summary: >-
        Returns a user based on a single ID, if the user does not have access to
        the rule
      description: >-
        Returns a user based on a single ID, if the user does not have access to
        the rule
      operationId: find rule by id
      parameters:
        - name: id
          in: path
          description: ID of rule to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - RULE
      summary: deletes a single rule based on the ID supplied
      description: deletes a single rule based on the ID supplied
      operationId: deleteFaq
      parameters:
        - name: id
          in: path
          description: ID of rule to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: rule deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Rule:
      allOf:
        - $ref: '#/components/schemas/NewRule'
        - type: object
          required:
            - id
          properties:
            id:
              type: integer
              format: int64
    NewRule:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: Do you have a collaboration agreement with the instrument?
        description:
          type: string
          example: Authority with a collaboration agreement for the negotiation of securities of listed companies.
        financial_instrument:
          type: string
          example: company shares
        authority:
          type: string
          example: "EU/LU"
        compatible_with_jurisdiction:
          type: array
          items:
            type: string
          example: [EU/ESMA, EU/LU, US/SEC , AE/ESCA, AU/AZ]  
        
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string

